mover Atomic_11@readerLock
assert Atomic_13@readerLock pred != null && pred.alloc == True
assert Atomic_16@readerLock n != null && n.alloc == True
assert Atomic_18@readerLock I != null && I.alloc == True
mover Atomic_5@readerLock
merge all
assert Atomic_43@readerLock n != null && n.alloc == True
assert Atomic_39@readerUnlock I != null && I.alloc == True
assert Atomic_39@readerUnlock I.next != null && I.next.alloc == True
mover Atomic_5@readerLock
merge all
assert Atomic_12@readerLock pred != null && pred.alloc == True
assert Atomic_15@readerLock I != null && I.alloc == True
assert Atomic_19@readerUnlock I != null && I.alloc == True
assert Atomic_32@readerUnlock I != null && I.alloc == True
assert Atomic_32@readerUnlock n != null && n.alloc == True
mover Atomic_5@readerLock
merge all
assert Atomic_11@readerLock I != null && I.alloc == True
assert Call_21@readerUnlock I != null && I.alloc == True
assert Atomic_24@readerUnlock I != null && I.alloc == True
assert Atomic_31@readerUnlock I != null && I.alloc == True
assert Atomic_31@readerUnlock n != null && n.alloc == True
assert Atomic_40@readerUnlock I != null && I.alloc == True
assert Call_29@readerUnlock I != null && I.alloc == True
mover Atomic_5@readerLock
merge all
aux intro creator [Lelem]int
simulate Atomic_5@readerLock I := New Lelem;         I.state := READER;          I.spin := 1;          I.next := null;          I.prev := null;          pred := L.elem;         L.elem := I; creator[I] := tid;
aux remove creator
invariant (forall elem: Lelem :: elem.alloc == False ==> creator[elem] == 0)
assert Atomic_11@readerLock creator[I] == tid
assert Call_21@readerUnlock creator[I] == tid
assert Atomic_24@readerUnlock creator[I] == tid
assert Call_29@readerUnlock creator[I] == tid
assert Atomic_31@readerUnlock creator[I] == tid
assert Atomic_31@readerUnlock creator[n] == tid
assert Atomic_40@readerUnlock creator[I] == tid
assert Atomic_40@readerUnlock I.prev == null || creator[I.prev] == tid
mover Atomic_11@readerLock
merge all
assert Atomic_11@readerLock creator[pred] == tid
assert Atomic_15@readerLock creator[I] == tid
assert Atomic_19@readerUnlock creator[I] == tid
assert Call_27@readerUnlock creator[p] == tid
assert Atomic_32@readerUnlock creator[n] == tid
assert Atomic_32@readerUnlock creator[I] == tid
assert Atomic_39@readerUnlock creator[I] == tid
mover Atomic_11@readerLock
merge all
assert Atomic_18@readerLock creator[I] == tid
mover Atomic_11@readerLock
mover Atomic_15@readerLock
mover Atomic_16@readerLock
assert Atomic_16@readerLock creator[n] == tid
mover Atomic_16@readerLock
mover Atomic_43@readerLock
mover Atomic_18@readerLock
mover Atomic_42@readerLock
