simulate Atomic_117 result := false;         current := Threads[tid];         if (lockedBy[this] == tid)         {             c := this.state;         }         else         {             havoc c;         }
mover Atomic_117
merge proc Sync_nonfairTryAcquire
simulate Atomic_117 result := false;         havoc current;             havoc c;         assert acquires == 1;         assert monitorException[this] == False;                if (*)         {             havoc dummy;             if (this.state == 0)             {                 this.state := 1;                 lockedBy[this] := tid;                 this.exclusiveOwnerThread := Threads[tid];                 result := true;             }         }         else         {             havoc ownerThread;             if (Threads[tid] == this.exclusiveOwnerThread)             {                 havoc nextc;                 if (this.state + 1 < 0)                 {                     throw Error;                 }                 else                 {                     this.state := this.state + 1;                     result := true;                 }             }         }
